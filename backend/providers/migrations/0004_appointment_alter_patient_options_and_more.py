# Generated by Django 4.2.2 on 2025-08-07 10:39

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('providers', '0003_patient_verificationtoken'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointment_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('appointment_mode', models.CharField(choices=[('in_person', 'In-Person'), ('video_call', 'Video Call'), ('home_visit', 'Home Visit')], default='in_person', max_length=20)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('follow_up', 'Follow Up'), ('emergency', 'Emergency'), ('telemedicine', 'Telemedicine'), ('routine_checkup', 'Routine Checkup'), ('specialist_consultation', 'Specialist Consultation')], default='consultation', max_length=30)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(480)])),
                ('timezone', models.CharField(default='UTC', max_length=64)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('partial', 'Partial'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('estimated_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('actual_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('reason_for_visit', models.TextField(help_text="Patient's reason for the appointment", max_length=1000)),
                ('symptoms', models.TextField(blank=True, help_text="Patient's symptoms (optional)", max_length=1000, null=True)),
                ('medical_history_notes', models.TextField(blank=True, help_text='Relevant medical history', max_length=2000, null=True)),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for the appointment', max_length=500, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('location_details', models.JSONField(blank=True, help_text='Location details for the appointment', null=True)),
                ('video_call_link', models.URLField(blank=True, help_text='Video call link for telemedicine appointments', null=True)),
                ('video_call_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(default='patient', help_text='Who created the appointment (patient, provider, admin)', max_length=50)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, max_length=500, null=True)),
                ('cancelled_by', models.CharField(blank=True, help_text='Who cancelled the appointment', max_length=50, null=True)),
            ],
            options={
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.AlterModelOptions(
            name='patient',
            options={'ordering': ['-created_at'], 'verbose_name': 'Patient', 'verbose_name_plural': 'Patients'},
        ),
        migrations.RemoveField(
            model_name='patient',
            name='address',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='gender',
        ),
        migrations.AddField(
            model_name='patient',
            name='address_line_1',
            field=models.CharField(default='', help_text='Primary address line', max_length=200),
        ),
        migrations.AddField(
            model_name='patient',
            name='address_line_2',
            field=models.CharField(blank=True, help_text='Secondary address line (optional)', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='city',
            field=models.CharField(default='', help_text='City', max_length=100),
        ),
        migrations.AddField(
            model_name='patient',
            name='ethnicity',
            field=models.CharField(blank=True, choices=[('hispanic_latino', 'Hispanic or Latino'), ('not_hispanic_latino', 'Not Hispanic or Latino'), ('prefer_not_to_say', 'Prefer not to say')], help_text="Patient's ethnicity", max_length=30, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='patient',
            name='gender_identity',
            field=models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('non_binary', 'Non-binary'), ('transgender_male', 'Transgender Male'), ('transgender_female', 'Transgender Female'), ('genderfluid', 'Genderfluid'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], default='prefer_not_to_say', help_text="Patient's gender identity", max_length=30),
        ),
        migrations.AddField(
            model_name='patient',
            name='last_failed_attempt',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='legal_sex',
            field=models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('intersex', 'Intersex'), ('unknown', 'Unknown')], default='unknown', help_text='Legal sex as per official documents', max_length=20),
        ),
        migrations.AddField(
            model_name='patient',
            name='locked_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='login_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='patient',
            name='middle_name',
            field=models.CharField(blank=True, help_text="Patient's middle name (optional)", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='preferred_language',
            field=models.CharField(choices=[('english', 'English'), ('spanish', 'Spanish'), ('french', 'French'), ('german', 'German'), ('chinese', 'Chinese'), ('hindi', 'Hindi'), ('arabic', 'Arabic'), ('portuguese', 'Portuguese'), ('russian', 'Russian'), ('japanese', 'Japanese'), ('other', 'Other')], default='english', help_text="Patient's preferred language", max_length=20),
        ),
        migrations.AddField(
            model_name='patient',
            name='preferred_name',
            field=models.CharField(blank=True, help_text="Patient's preferred name (optional)", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='race',
            field=models.CharField(blank=True, choices=[('american_indian_alaska_native', 'American Indian or Alaska Native'), ('asian', 'Asian'), ('black_african_american', 'Black or African American'), ('native_hawaiian_pacific_islander', 'Native Hawaiian or Other Pacific Islander'), ('white', 'White'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], help_text="Patient's race", max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='patient',
            name='state',
            field=models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], default='NY', help_text='State', max_length=2),
        ),
        migrations.AddField(
            model_name='patient',
            name='suspicious_activity_score',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='patient',
            name='zipcode',
            field=models.CharField(default='00000', help_text='ZIP code', max_length=10, validators=[django.core.validators.RegexValidator(message='Enter a valid ZIP code (e.g., 12345 or 12345-6789)', regex='^\\d{5}(-\\d{4})?$')]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='date_of_birth',
            field=models.DateField(default='1990-01-01', help_text="Patient's date of birth"),
        ),
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=models.EmailField(help_text="Patient's email address", max_length=254, unique=True, validators=[django.core.validators.EmailValidator()]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='emergency_contact',
            field=models.JSONField(blank=True, help_text='Emergency contact information', null=True),
        ),
        migrations.AlterField(
            model_name='patient',
            name='first_name',
            field=models.CharField(help_text="Patient's first name", max_length=50, validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='insurance_info',
            field=models.JSONField(blank=True, help_text='Insurance information', null=True),
        ),
        migrations.AlterField(
            model_name='patient',
            name='last_name',
            field=models.CharField(help_text="Patient's last name", max_length=50, validators=[django.core.validators.MinLengthValidator(2)]),
        ),
        migrations.AlterField(
            model_name='patient',
            name='medical_history',
            field=models.JSONField(blank=True, help_text="Patient's medical history", null=True),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=models.CharField(help_text="Patient's phone number", max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid international phone number.', regex='^\\+?[1-9]\\d{1,14}$')]),
        ),
        migrations.AlterModelTable(
            name='patient',
            table='patients',
        ),
        migrations.CreateModel(
            name='PatientSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('refresh_token_hash', models.CharField(max_length=128)),
                ('device_info', models.JSONField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=256, null=True)),
                ('expires_at', models.DateTimeField()),
                ('is_revoked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('location_info', models.JSONField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='providers.patient')),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_name', models.CharField(max_length=100)),
                ('schedule', models.JSONField()),
                ('default_settings', models.JSONField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_templates', to='providers.provider')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('timezone', models.CharField(default='UTC', max_length=64)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=16, null=True)),
                ('recurrence_end_date', models.DateField(blank=True, null=True)),
                ('slot_duration', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(480)])),
                ('break_duration', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('cancelled', 'Cancelled'), ('blocked', 'Blocked'), ('maintenance', 'Maintenance')], default='available', max_length=16)),
                ('max_appointments_per_slot', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('current_appointments', models.PositiveIntegerField(default=0)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('follow_up', 'Follow Up'), ('emergency', 'Emergency'), ('telemedicine', 'Telemedicine')], default='consultation', max_length=16)),
                ('location', models.JSONField()),
                ('pricing', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('special_requirements', models.JSONField(blank=True, default=list, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='providers.provider')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slot_start_time', models.DateTimeField()),
                ('slot_end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('cancelled', 'Cancelled'), ('blocked', 'Blocked')], default='available', max_length=16)),
                ('patient_id', models.UUIDField(blank=True, null=True)),
                ('appointment_type', models.CharField(max_length=16)),
                ('booking_reference', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='providers.availability')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_slots', to='providers.provider')),
            ],
            options={
                'ordering': ['slot_start_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled'), ('completed', 'Completed'), ('no_show', 'No Show')], max_length=20)),
                ('description', models.TextField(max_length=500)),
                ('performed_by', models.CharField(max_length=100)),
                ('performed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('previous_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='providers.appointment')),
            ],
            options={
                'ordering': ['-performed_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='appointment_slot',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='providers.appointmentslot'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='providers.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='providers.provider'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['provider', 'date'], name='providers_a_provide_49b5de_idx'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['date', 'status'], name='providers_a_date_a3b593_idx'),
        ),
        migrations.AddIndex(
            model_name='availability',
            index=models.Index(fields=['provider', 'status'], name='providers_a_provide_078376_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentslot',
            index=models.Index(fields=['provider', 'slot_start_time'], name='providers_a_provide_802a6d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentslot',
            index=models.Index(fields=['status', 'slot_start_time'], name='providers_a_status_f57015_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentslot',
            index=models.Index(fields=['booking_reference'], name='providers_a_booking_ccb8f6_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointmentslot',
            constraint=models.UniqueConstraint(fields=('provider', 'slot_start_time'), name='unique_provider_slot_time'),
        ),
        migrations.AddIndex(
            model_name='appointmenthistory',
            index=models.Index(fields=['appointment', 'performed_at'], name='providers_a_appoint_0539d2_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmenthistory',
            index=models.Index(fields=['action', 'performed_at'], name='providers_a_action_85b791_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='providers_a_patient_318365_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['provider', 'appointment_date'], name='providers_a_provide_fea6e3_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status', 'appointment_date'], name='providers_a_status_115105_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_number'], name='providers_a_appoint_ec6a4d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['payment_status'], name='providers_a_payment_21e5de_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointment',
            constraint=models.UniqueConstraint(condition=models.Q(('status__in', ['scheduled', 'confirmed', 'in_progress'])), fields=('provider', 'appointment_date', 'appointment_time'), name='unique_provider_appointment_time'),
        ),
    ]
